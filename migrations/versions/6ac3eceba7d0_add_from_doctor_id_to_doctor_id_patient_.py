"""Add from_doctor_id, to_doctor_id, patient_id to Referral

Revision ID: 6ac3eceba7d0
Revises: 0708d877346d
Create Date: 2025-06-29 15:52:36.946745

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6ac3eceba7d0'
down_revision = '0708d877346d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lab_test',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('referral', schema=None) as batch_op:
        batch_op.add_column(sa.Column('patient_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('from_doctor_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('to_doctor_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'doctor', ['to_doctor_id'], ['id'])
        batch_op.create_foreign_key(None, 'patient', ['patient_id'], ['id'])
        batch_op.create_foreign_key(None, 'doctor', ['from_doctor_id'], ['id'])

    with op.batch_alter_table('test_result', schema=None) as batch_op:
        batch_op.add_column(sa.Column('patient_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('doctor_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('lab_test_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('status', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.drop_constraint(batch_op.f('test_result_department_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('test_result_visit_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'lab_test', ['lab_test_id'], ['id'])
        batch_op.create_foreign_key(None, 'doctor', ['doctor_id'], ['id'])
        batch_op.create_foreign_key(None, 'patient', ['patient_id'], ['id'])
        batch_op.drop_column('department_id')
        batch_op.drop_column('visit_id')
        batch_op.drop_column('uploaded_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('test_result', schema=None) as batch_op:
        batch_op.add_column(sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('visit_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('department_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('test_result_visit_id_fkey'), 'visit', ['visit_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('test_result_department_id_fkey'), 'department', ['department_id'], ['id'])
        batch_op.drop_column('created_at')
        batch_op.drop_column('status')
        batch_op.drop_column('lab_test_id')
        batch_op.drop_column('doctor_id')
        batch_op.drop_column('patient_id')

    with op.batch_alter_table('referral', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('to_doctor_id')
        batch_op.drop_column('from_doctor_id')
        batch_op.drop_column('patient_id')

    op.drop_table('lab_test')
    # ### end Alembic commands ###
